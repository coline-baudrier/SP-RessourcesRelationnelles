version: "3.8"

services:
  ### MySQL (base de données)
  mysql:
    image: mysql:8.0
    env_file: .env # Charge les variables depuis le .env
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d # Exécution automatique des scripts SQL
    ports:
      - "3307:3306"

  ### PHP (backend + outils nécessaires)
  php:
    build: ./backend # Permet d'utiliser le Dockerfile qui est présent dans le dossier backend
    env_file: .env # Charge les variables depuis le .env
    # volumes:
    #  - ./backend:/var/www/html
    ports:
      - "${PHP_PORT}:80" # On accède par http://localhost:8000
    depends_on:
      - mysql # On lui demande d'attendre que mysql soit prêt

  ### Flutter (Frontend)
  flutter:
    build: ./frontend # Permet d'utiliser le Dockerfile qui est présent dans le dossier frontend
    env_file: .env
    volumes:
      - ./frontend:/app
      - /app/build
    ports:
      - "${FLUTTER_PORT}:5000" # Port typique pour une app Flutter web
    stdin_open: true
    tty: true

### Volume pour MySQL
volumes:
  mysql_data:
    driver: local
